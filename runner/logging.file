# configuration format: file (default) and dict, and which is based on configparser functionality
# file config not support filter
# https://docs.python.org/2/library/logging.config.html#configuration-file-format 
# 15.8.3. Configuration file format

[loggers]
keys=root,default,log03,log04,log05,log06,log07

[handlers]
keys=hand01,hand02,hand03,hand04,hand05,hand06,hand07,hand08,hand09

[formatters]
keys=form01,form02,form03,form04,form05,form06,form07,form08,form09


[logger_root]
level=NOTSET
handlers=hand01

[logger_parser]
level=DEBUG
handlers=hand01
propagate=1
qualname=compiler.parser


[handler_hand01]
class=StreamHandler
level=NOTSET
formatter=form01
args=(sys.stdout,)

[handler_hand07]
class=handlers.SMTPHandler
level=WARN
formatter=form07
args=('localhost', 'from@abc', ['user1@abc', 'user2@xyz'], 'Logger Subject')


[handler_hand05]
class=handlers.SysLogHandler
level=ERROR
formatter=form05
args=(('localhost', handlers.SYSLOG_UDP_PORT), handlers.SysLogHandler.LOG_USER)


[formatter_form01]
format=F1 %(asctime)s %(levelname)s %(message)s
datefmt=
class=logging.Formatter



#formatters:
#  brief:
#    format: '%(message)s'
#  default:
#    format: '%(asctime)s %(levelname)-8s %(name)-15s %(message)s'
#    datefmt: '%Y-%m-%d %H:%M:%S'
#  custom:
#      (): my.package.customFormatterFactory
#      bar: baz
#      spam: 99.9
#      answer: 42



